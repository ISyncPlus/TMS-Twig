<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <title>{% block title %}TicketWave{% endblock %}</title>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="/styles.css" />
    <style>
      /* Embedded React index.css + globals.css essentials for visual parity */
              }


              // Expose for debugging (optional)
              window.__tmsAuth = { signupClient, loginClient, readUsers };

              // Attach form handlers when DOM ready
              document.addEventListener('DOMContentLoaded', () => {
                // Login form
                const loginForm = document.querySelector('form[action="/login"]');
                if (loginForm) {
                  loginForm.addEventListener('submit', (e) => {
                    e.preventDefault();
                    const form = e.currentTarget;
                    const email = (form.querySelector('input[name="email"]')||{}).value?.trim() || '';
                    const password = (form.querySelector('input[name="password"]')||{}).value || '';
                    let hasError = false;
                    // simple validation
                    const emailErrEl = document.getElementById('email-error');
                    const passErrEl = document.getElementById('password-error');
                    if (emailErrEl) { emailErrEl.textContent = ''; emailErrEl.classList.add('hidden'); }
                    if (passErrEl) { passErrEl.textContent = ''; passErrEl.classList.add('hidden'); }
                    if (!email) { if (emailErrEl) { emailErrEl.textContent = 'Email is required'; emailErrEl.classList.remove('hidden'); } hasError = true; }
                    else if (!/\S+@\S+\.\S+/.test(email)) { if (emailErrEl) { emailErrEl.textContent = 'Email is invalid'; emailErrEl.classList.remove('hidden'); } hasError = true; }
                    if (!password) { if (passErrEl) { passErrEl.textContent = 'Password is required'; passErrEl.classList.remove('hidden'); } hasError = true; }
                    else if (password.length < 6) { if (passErrEl) { passErrEl.textContent = 'Password must be at least 6 characters'; passErrEl.classList.remove('hidden'); } hasError = true; }
                    if (hasError) { window.toast.error('Please fix the form errors'); return; }
                    loginClient(email, password).then(res => {
                      if (!res.ok) { window.toast.error('Invalid email or password'); return; }
                      window.toast.success('Successfully logged in!');
                      // small delay so toast is visible then navigate
                      setTimeout(() => { window.location.href = '/dashboard'; }, 350);
                    });
                  });

                  // Enhance visuals: ticket-badge hover/idle animation using Web Animations API
                  const badges = document.querySelectorAll('.ticket-badge');
                  badges.forEach(b => {
                    // subtle idle scale pulse
                    try {
                      b.animate([
                        { transform: 'scale(1)' },
                        { transform: 'scale(1.05)' },
                        { transform: 'scale(1)' }
                      ], { duration: 6000, iterations: Infinity, easing: 'ease-in-out' });
                    } catch (e) {}

                    // rotate on hover (non-blocking)
                    b.addEventListener('mouseenter', () => {
                      try { b.animate([{ transform: 'rotate(0deg)' }, { transform: 'rotate(360deg)' }], { duration: 800, easing: 'cubic-bezier(.17,.67,.35,1)' }); } catch(e) {}
                    });
                  });
                }

                // Signup form
                const signupForm = document.querySelector('form[action="/signup"]');
                if (signupForm) {
                  signupForm.addEventListener('submit', (e) => {
                    e.preventDefault();
                    const form = e.currentTarget;
                    const name = (form.querySelector('input[name="name"]')||{}).value?.trim() || '';
                    const email = (form.querySelector('input[name="email"]')||{}).value?.trim() || '';
                    const password = (form.querySelector('input[name="password"]')||{}).value || '';
                    const confirm = (form.querySelector('input[name="confirmPassword"]')||{}).value || '';
                    let hasError = false;
                    const nameErr = document.getElementById('name-error');
                    const emailErr = document.getElementById('email-error');
                    const passErr = document.getElementById('password-error');
                    const confErr = document.getElementById('confirmPassword-error');
                    [nameErr,emailErr,passErr,confErr].forEach(n=>{ if(n){ n.textContent=''; n.classList.add('hidden'); }});
                    if (!name) { if (nameErr){ nameErr.textContent='Name is required'; nameErr.classList.remove('hidden'); } hasError = true; }
                    if (!email) { if (emailErr){ emailErr.textContent='Email is required'; emailErr.classList.remove('hidden'); } hasError = true; }
                    else if (!/\S+@\S+\.\S+/.test(email)) { if (emailErr){ emailErr.textContent='Email is invalid'; emailErr.classList.remove('hidden'); } hasError = true; }
                    if (!password) { if (passErr){ passErr.textContent='Password is required'; passErr.classList.remove('hidden'); } hasError = true; }
                    else if (password.length < 6) { if (passErr){ passErr.textContent='Password must be at least 6 characters'; passErr.classList.remove('hidden'); } hasError = true; }
                    if (password !== confirm) { if (confErr){ confErr.textContent='Passwords do not match'; confErr.classList.remove('hidden'); } hasError = true; }
                    if (hasError) { window.toast.error('Please fix the form errors'); return; }
                    signupClient(email, password, name).then(res => {
                      if (!res.ok) { window.toast.error('An account with that email already exists'); return; }
                      window.toast.success('Account created successfully!');
                      setTimeout(() => { window.location.href = '/dashboard'; }, 350);
                    });
                  });
                }
              });
            })();
          </script>

        </nav>
      </div>
    </header>

    <main>
      {% block content %}{% endblock %}
    </main>

  </body>
</html>
                  if (res.ok) {
                    const json = await res.json();
                    if (json.ok) {
                      localStorage.setItem(SESSION_KEY, JSON.stringify({ user: json.user, isAuthenticated: true }));
                      return { ok: true, user: json.user };
                    }
                    return { ok: false };
                  }
                } catch (e) {
                  // server not reachable, fallback below
                }
                const users = readUsers();
                const matched = users.find(u => u.email === email && u.password === password);
                if (!matched) return { ok: false };
                localStorage.setItem(SESSION_KEY, JSON.stringify({ user: { id: matched.id, email: matched.email, name: matched.name }, isAuthenticated: true }));
                return { ok: true, user: matched };
              }

              // Expose for debugging (optional)
              window.__tmsAuth = { signupClient, loginClient, readUsers };

              // Attach form handlers when DOM ready
              document.addEventListener('DOMContentLoaded', () => {
                // Login form
                const loginForm = document.querySelector('form[action="/login"]');
                if (loginForm) {
                  loginForm.addEventListener('submit', (e) => {
                    e.preventDefault();
                    const form = e.currentTarget;
                    const email = (form.querySelector('input[name="email"]')||{}).value?.trim() || '';
                    const password = (form.querySelector('input[name="password"]')||{}).value || '';
                    let hasError = false;
                    // simple validation
                    const emailErrEl = document.getElementById('email-error');
                    const passErrEl = document.getElementById('password-error');
                    if (emailErrEl) { emailErrEl.textContent = ''; emailErrEl.classList.add('hidden'); }
                    if (passErrEl) { passErrEl.textContent = ''; passErrEl.classList.add('hidden'); }
                    if (!email) { if (emailErrEl) { emailErrEl.textContent = 'Email is required'; emailErrEl.classList.remove('hidden'); } hasError = true; }
                    else if (!/\S+@\S+\.\S+/.test(email)) { if (emailErrEl) { emailErrEl.textContent = 'Email is invalid'; emailErrEl.classList.remove('hidden'); } hasError = true; }
                    if (!password) { if (passErrEl) { passErrEl.textContent = 'Password is required'; passErrEl.classList.remove('hidden'); } hasError = true; }
                    else if (password.length < 6) { if (passErrEl) { passErrEl.textContent = 'Password must be at least 6 characters'; passErrEl.classList.remove('hidden'); } hasError = true; }
                    if (hasError) { window.toast.error('Please fix the form errors'); return; }
                    const res = loginClient(email, password);
                    if (!res.ok) { window.toast.error('Invalid email or password'); return; }
                    window.toast.success('Successfully logged in!');
                    // small delay so toast is visible then navigate
                    setTimeout(() => { window.location.href = '/dashboard'; }, 350);
                  });

                  // Enhance visuals: ticket-badge hover/idle animation using Web Animations API
                  document.addEventListener('DOMContentLoaded', () => {
                    const badges = document.querySelectorAll('.ticket-badge');
                    badges.forEach(b => {
                      // subtle idle scale pulse
                      try {
                        b.animate([
                          { transform: 'scale(1)' },
                          { transform: 'scale(1.05)' },
                          { transform: 'scale(1)' }
                        ], { duration: 6000, iterations: Infinity, easing: 'ease-in-out' });
                      } catch (e) {}

                      // rotate on hover (non-blocking)
                      b.addEventListener('mouseenter', () => {
                        try { b.animate([{ transform: 'rotate(0deg)' }, { transform: 'rotate(360deg)' }], { duration: 800, easing: 'cubic-bezier(.17,.67,.35,1)' }); } catch(e) {}
                      });
                    });
                  });
                }

                // Signup form
                const signupForm = document.querySelector('form[action="/signup"]');
                if (signupForm) {
                  signupForm.addEventListener('submit', (e) => {
                    e.preventDefault();
                    const form = e.currentTarget;
                    const name = (form.querySelector('input[name="name"]')||{}).value?.trim() || '';
                    const email = (form.querySelector('input[name="email"]')||{}).value?.trim() || '';
                    const password = (form.querySelector('input[name="password"]')||{}).value || '';
                    const confirm = (form.querySelector('input[name="confirmPassword"]')||{}).value || '';
                    let hasError = false;
                    const nameErr = document.getElementById('name-error');
                    const emailErr = document.getElementById('email-error');
                    const passErr = document.getElementById('password-error');
                    const confErr = document.getElementById('confirmPassword-error');
                    [nameErr,emailErr,passErr,confErr].forEach(n=>{ if(n){ n.textContent=''; n.classList.add('hidden'); }});
                    if (!name) { if (nameErr){ nameErr.textContent='Name is required'; nameErr.classList.remove('hidden'); } hasError = true; }
                    if (!email) { if (emailErr){ emailErr.textContent='Email is required'; emailErr.classList.remove('hidden'); } hasError = true; }
                    else if (!/\S+@\S+\.\S+/.test(email)) { if (emailErr){ emailErr.textContent='Email is invalid'; emailErr.classList.remove('hidden'); } hasError = true; }
                    if (!password) { if (passErr){ passErr.textContent='Password is required'; passErr.classList.remove('hidden'); } hasError = true; }
                    else if (password.length < 6) { if (passErr){ passErr.textContent='Password must be at least 6 characters'; passErr.classList.remove('hidden'); } hasError = true; }
                    if (password !== confirm) { if (confErr){ confErr.textContent='Passwords do not match'; confErr.classList.remove('hidden'); } hasError = true; }
                    if (hasError) { window.toast.error('Please fix the form errors'); return; }
                    const res = signupClient(email, password, name);
                    if (!res.ok) { window.toast.error('An account with that email already exists'); return; }
                    window.toast.success('Account created successfully!');
                    setTimeout(() => { window.location.href = '/dashboard'; }, 350);
                  });
                }
              });
            })();
          </script>
